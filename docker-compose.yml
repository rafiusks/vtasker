services:
  postgres:
    image: postgres:15-alpine
    container_name: vtasker-postgres
    environment:
      POSTGRES_USER: vtasker
      POSTGRES_PASSWORD: vtasker_dev
      POSTGRES_DB: vtasker
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/init-extensions.sql:/docker-entrypoint-initdb.d/01-init-extensions.sql
    networks:
      - vtasker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vtasker"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: vtasker-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - vtasker-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: vtasker-backend
    ports:
      - "8080:8080"
    networks:
      - vtasker-network
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=vtasker-postgres
      - DB_PORT=5432
      - DB_USER=vtasker
      - DB_PASSWORD=vtasker_dev
      - DB_NAME=vtasker
      - REDIS_HOST=vtasker-redis
      - REDIS_PORT=6379
      - JWT_SECRET=vtasker_development_secret_key_2024

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: vtasker-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - vtasker-network
    env_file:
      - ./frontend/.env.docker
    environment:
      - JWT_SECRET=vtasker_development_secret_key_2024
    depends_on:
      - backend

networks:
  vtasker-network:
    name: vtasker-network

volumes:
  postgres-data:
    name: vtasker-postgres-data
  redis-data:
    name: vtasker-redis-data 